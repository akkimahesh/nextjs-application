name: Deploy Next.js application

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source
        uses: actions/checkout@v4

      - name: Build Docker image
        run: docker build -t akkimahesh/nextjs-app:latest .

      - name: Verify images
        run: docker images

      - name: Login to Docker Hub
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Publish image to Docker Hub
        run: docker push akkimahesh/nextjs-app:latest

  deploy:
    needs: build
    runs-on: self-hosted
    steps:
      - name: Uninstall conflicting packages
        run: |
          for pkg in docker.io docker-doc docker-compose docker-compose-v2 podman-docker containerd runc; do
            sudo apt-get remove -y $pkg
          done

      - name: Update system and install Docker
        run: |
          sudo apt-get update -y
          sudo apt-get install -y ca-certificates curl gnupg lsb-release
          sudo install -m 0755 -d /etc/apt/keyrings
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
          sudo chmod a+r /etc/apt/keyrings/docker.gpg
          echo \
          "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] \
          https://download.docker.com/linux/ubuntu \
          $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt-get update -y
          sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

      - name: Check Docker version
        run: docker version

      - name: Avoid needing sudo for Docker commands
        run: sudo usermod -aG docker ubuntu

      - name: Pull image from Docker Hub
        run: docker pull akkimahesh/nextjs-app:latest

      - name: Delete old container if exists
        run: docker rm -f nextjs-app-container || echo "No existing container to remove"

      - name: Run Docker container
        run: docker run -d --name nextjs-app-container -p 3000:3000 akkimahesh/nextjs-app:latest

      # Minikube setup
      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl.sha256"
          echo "$(cat kubectl.sha256)  kubectl" | sha256sum --check
          sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl

      - name: Check kubectl version
        run: kubectl version --client

      # conntrack is required for Minikube
      - name: Install conntrack
        run: sudo apt-get install -y conntrack

      - name: Install Minikube
        run: |
          curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
          sudo install minikube-linux-amd64 /usr/local/bin/minikube
          rm minikube-linux-amd64

      - name: Start Minikube
        run: minikube start --driver=docker
